initSidebarItems({"enum":[["ErrorKind",""],["FilterLevel","Logging filtering level"],["Level","Log record level"]],"macro":[["crit","Log critical level record"],["debug","Log debug level record"],["error","Log error level record"],["info","Log info level record"],["log","Log message of a given level"],["o","Convenience function for building `&[OwnedKeyValue]`"],["slog_crit","Log critical level record"],["slog_debug","Log debug level record"],["slog_error","Log error level record"],["slog_info","Log info level record"],["slog_log","Alias for `log`"],["slog_trace","Log trace level record"],["slog_warn","Log warning level record"],["trace","Log trace level record"],["warn","Log warning level record"]],"mod":[["drain","Drains - logging outputs # Drains"],["format","Output formating"],["logger","Logger - logging handle # Logger"],["ser","Serialization"]],"static":[["LOG_LEVEL_NAMES","Official capitalized logging (and logging filtering) level names"],["LOG_LEVEL_SHORT_NAMES","Official capitalized logging (and logging filtering) short level names"]],"struct":[["Error",""],["OwnedKeyValueNode","Values specific for this Logger and reference to it's parent values"],["OwnedKeyValueNodeIterator","Iterator over `OwnedKeyValue`-s"]],"type":[["BorrowedKeyValue","Key value pair that can be part of each logging record"],["OwnedKeyValue","Key value pair that can be owned by `Logger`"],["Result",""]]});